#version 120

uniform sampler2D texture;
uniform ivec2 screenSize;

float valueTable[] = float[](3.004999999999707,3.0049986928997283,3.0046814617809576,2.9869601808100117,2.7140954060482256,1.5049750623438467,0.42210956158642476,0.10520030607347634,3.197533047168789e-2,1.3298445577722997e-2,7.827819367009615e-3,6.009542838870712e-3,5.331130435810716e-3,5.04630769294192e-3,4.909048354957093e-3,4.8307555029997945e-3,4.777035131242489e-3,4.733649657470617e-3,4.694373462827083e-3,4.656356455766792e-3,4.618245635312383e-3,4.579383082698538e-3,4.5394471909571315e-3,4.4982853182372485e-3,4.455832721344436e-3,4.4120719055579264e-3,4.367011579464685e-3,4.320675427235116e-3,4.273095942523001e-3,4.224310943060962e-3,4.174361540826779e-3,4.123290921253365e-3,4.071143582242545e-3,4.017964840217064e-3,3.96380049466652e-3,3.908696588926116e-3,3.852699230858497e-3,3.7958544519008175e-3,3.73820809151896e-3,3.6798056991642868e-3,3.6206924488471656e-3,3.5609130632678803e-3,3.5005117455626828e-3,3.4395321174128337e-3,3.3780171626934226e-3,3.3160091761069437e-3,3.253549716414337e-3,3.190679563980735e-3,3.1274386824178585e-3,3.0638661841441745e-3,3.000000299707032e-3,2.9358783507238296e-3,2.871536726305753e-3,2.807010862830118e-3,2.7423352269276974e-3,2.6775433015504405e-3,2.612667574983533e-3,2.5477395326642897e-3,2.4827896516690117e-3,2.417847397728099e-3,2.352941224629295e-3,2.2880985758690587e-3,2.2233458884128587e-3,2.1587085984263133e-3,2.0942111488410618e-3,2.0298769986213756e-3,1.965728633600401e-3,1.9017875787579667e-3,1.838074411815492e-3,1.7746087780272882e-3,1.7114094060516698e-3,1.648494124789641e-3,1.5858798810833542e-3,1.5235827581712262e-3,1.4616179948013365e-3,1.4000000049094903e-3,1.3387423977732258e-3,1.2778579985578435e-3,1.2173588691753688e-3,1.1572563293821211e-3,1.0975609780452713e-3,1.0382827145133707e-3,9.794307600303391e-4,9.210136791367937e-4,8.630394010068492e-4,8.055152406726344e-4,7.484479200927294e-4,6.918435890245413e-4,6.357078456643e-4,5.800457570217868e-4,5.248618790002964e-4,4.701602761554372e-4,4.159445411093736e-4,3.6221781359993603e-4,3.089827991466926e-4,2.5624178731855035e-4,2.0399666958982802e-4,1.5224895677390406e-4,1.0099979602559859e-4,5.0249987405350395e-5,0.0);

float sampleValueTable(float x)
{
    int tableLength = valueTable.length();
    float theX = x * tableLength;
    int minX = int(theX);
    return valueTable[minX];
}

float glowComponent(float component)
{
    return component < 0.9 ? 0.1 : component;
}

vec3 glowColor(vec3 color)
{
    if (color.r + color.g + color.b == 0) return vec3(0, 0, 0);
    return vec3(glowComponent(color.r), glowComponent(color.g), glowComponent(color.b));
}

float smoothValue(vec2 uv)
{
    float d = min(1, length(uv));
    float val = sampleValueTable(d);
    return val;
}

void main()
{
    const int smoothPixelsSize = 35;
    ivec2 start = ivec2(gl_FragCoord.xy) - ivec2(smoothPixelsSize, smoothPixelsSize) / 2;
    vec2 uvScreenStart = vec2(start) / vec2(screenSize);
    vec2 uvScreenInc = vec2(1, 1) / vec2(screenSize);
    vec2 uvScreen;
    vec2 uvSmoothStart = vec2(-1, -1);
    vec2 uvSmoothInc = vec2(2, 2) / vec2(smoothPixelsSize, smoothPixelsSize);
    vec2 uvSmooth;

    vec3 sum = vec3(0, 0, 0);
    uvScreen.y = uvScreenStart.y;
    uvSmooth.y = uvSmoothStart.y;
    for (int y = start.y; y < start.y + smoothPixelsSize; ++y) {
        uvScreen.x = uvScreenStart.x;
        uvSmooth.x = uvSmoothStart.x;
        for (int x = start.x; x < start.x + smoothPixelsSize; ++x) {
            vec4 color = texture2D(texture, uvScreen);
            float value = smoothValue(uvSmooth);
            sum += glowColor(color.rgb) * value;
            uvScreen.x += uvScreenInc.x;
            uvSmooth.x += uvSmoothInc.x;
        }
        uvScreen.y += uvScreenInc.y;
        uvSmooth.y += uvSmoothInc.y;
    }
    gl_FragColor = vec4(sum, 1);
}